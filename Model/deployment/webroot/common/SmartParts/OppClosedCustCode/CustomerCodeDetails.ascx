<%@ Control Language="C#" ClassName="CustomerCodeDetails" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="50%" />
            <col width="50%" />
     <tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lueAreamaster_lbl" AssociatedControlID="lueAreamaster" runat="server" Text="<%$ resources: lueAreamaster.Caption %>" ></asp:Label>
 </div>   
  <div   class="textcontrol lookup"   >
<SalesLogix:LookupControl runat="server" ID="lueAreamaster" LookupEntityName="Vwareamaster" LookupEntityTypeName="Sage.Entity.Interfaces.IVwareamaster, Sage.Entity.Interfaces, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" AutoPostBack="true" Required="true"  >
<LookupProperties>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAreamaster.LookupProperties.Carea.PropertyHeader %>" PropertyName="Carea" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAreamaster.LookupProperties.Cscrcddesc.PropertyHeader %>" PropertyName="Cscrcddesc" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
<SalesLogix:LookupProperty PropertyHeader="<%$ resources: lueAreamaster.LookupProperties.Cscrcd.PropertyHeader %>" PropertyName="Cscrcd" PropertyType="System.String" PropertyFormat="None" PropertyFormatString="" UseAsResult="True" ExcludeFromFilters="False"></SalesLogix:LookupProperty>
</LookupProperties>
<LookupPreFilters>
</LookupPreFilters>
</SalesLogix:LookupControl>
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtcustomerCode_lbl" AssociatedControlID="txtcustomerCode" runat="server" Text="<%$ resources: txtcustomerCode.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtcustomerCode" Required="true"  dojoType="Sage.UI.Controls.TextBox" AutoPostBack="true"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="lblmsg"  />
</div>
      </td>
                <td></td>
      </tr>
<tr>
            <td  >
<asp:Panel runat="server" ID="QFControlsList" CssClass="controlslist "
>
   <asp:Button runat="server" ID="btnOK"
 Text="<%$ resources: btnOK.Caption %>"  />
 
   <asp:Button runat="server" ID="btnCancel"
 Text="<%$ resources: btnCancel.Caption %>"  />
 
</asp:Panel>
      </td>
                <td></td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="CustomerCodeDetails_RTools" ToolbarLocation="right">
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=CustomerCodeDetails&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkCustomerCodeDetailsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="CustomerCodeDetails" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IOppClosedCustCode); }
}

 

protected override void OnAddEntityBindings() {
                 // lueAreamaster.LookupResultValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding lueAreamasterLookupResultValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AreaMasterid", lueAreamaster, "LookupResultValue");
        BindingSource.Bindings.Add(lueAreamasterLookupResultValueBinding);
                    // txtcustomerCode.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtcustomerCodeTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("CustomerCode", txtcustomerCode, "Text");
        BindingSource.Bindings.Add(txtcustomerCodeTextBinding);
                
   
}
                                          
protected void lueAreamaster_ChangeAction(object sender, EventArgs e) {
//Sage.Entity.Interfaces.IOpportunity objopp = this.BindingSource.Current as Sage.Entity.Interfaces.IOpportunity;
//lblmsg.Visible = false;
lblmsg.Text = "";
//txtNotes.Text = objopp.Notes;

}
protected void txtcustomerCode_ChangeAction(object sender, EventArgs e) {
lblmsg.Text = "";

}
protected void btnOK_ClickAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.IOppClosedCustCode oppClose = BindingSource.Current as Sage.Entity.Interfaces.IOppClosedCustCode;
Sage.Entity.Interfaces.IOpportunity opp = GetParentEntity() as Sage.Entity.Interfaces.IOpportunity;

   //validate Area & customer code 
Sage.Entity.Interfaces.IVwareamaster objarea = (Sage.Entity.Interfaces.IVwareamaster)lueAreamaster.LookupResultValue;
foreach(Sage.Entity.Interfaces.IOppClosedCustCode oppcode in opp.OppClosedCustCodes)
{
    if (oppcode.CArea == objarea.Carea && oppcode.CustomerCode == Convert.ToInt32(txtcustomerCode.Text.Trim()))
	{
		lblmsg.Text = "Duplicate customercode...";
		return;
	}
}
string qry = "select * From CUSTMST where CCUSTCODE = '" + txtcustomerCode.Text.Trim() + "' and CAREA = '"+ objarea.Carea.Trim() +"'";
Sage.Platform.Data.IDataService service = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Data.IDataService>();
System.Data.OleDb.OleDbConnection conObj = new System.Data.OleDb.OleDbConnection(service.GetConnectionString());
System.Data.OleDb.OleDbDataAdapter dataAdapterObj = new System.Data.OleDb.OleDbDataAdapter(qry, conObj);
System.Data.DataTable dt = new System.Data.DataTable();
dataAdapterObj.Fill(dt);
if (dt.Rows.Count > 0)
{
    //validate all account axcept cureent account
    string qry1 = "select * From OppClosedCustCode where CUSTOMERCODE = '" + txtcustomerCode.Text.Trim() + "' and CAREA = '" + objarea.Carea.Trim() + "' and OPPORTUNITYID not in (Select OpportunityID From Opportunity where AccountID = '" + opp.Account.Id + "')";
    Sage.Platform.Data.IDataService service1 = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Data.IDataService>();
    System.Data.OleDb.OleDbConnection conObj1 = new System.Data.OleDb.OleDbConnection(service1.GetConnectionString());
    System.Data.OleDb.OleDbDataAdapter dataAdapterObj1 = new System.Data.OleDb.OleDbDataAdapter(qry1, conObj1);
    System.Data.DataTable dt1 = new System.Data.DataTable();
    dataAdapterObj1.Fill(dt1);
    if (dt1.Rows.Count > 0)
    {
        //DialogService.ShowMessage("Customer Code already allocated to another Account");
		lblmsg.Text="Customer Code already allocated to another Account";
    }
    else
    {
        //validate Accountmanger to employeecode
        string qry2 = "select * From CUSTMST where CCUSTCODE = '" + txtcustomerCode.Text.Trim() + "' and CAREA = '" + objarea.Carea.Trim() + "' and CSALEMPCD = '" + opp.AccountManager.UserName + "'";
        Sage.Platform.Data.IDataService service2 = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.Platform.Data.IDataService>();
        System.Data.OleDb.OleDbConnection conObj2 = new System.Data.OleDb.OleDbConnection(service.GetConnectionString());
        System.Data.OleDb.OleDbDataAdapter dataAdapterObj2 = new System.Data.OleDb.OleDbDataAdapter(qry2, conObj2);
        System.Data.DataTable dt2 = new System.Data.DataTable();
        dataAdapterObj2.Fill(dt2);
        if (dt2.Rows.Count > 0)
        {
            //save data with status closed
			if(oppClose == null)
			{
				oppClose = Sage.Platform.EntityFactory.Create<Sage.Entity.Interfaces.IOppClosedCustCode>();
			}
            oppClose.Vwareamaster = objarea;
            oppClose.CustomerCode = Convert.ToInt32(txtcustomerCode.Text.Trim());
            oppClose.Opportunity = opp;
			oppClose.CArea = objarea.Carea.Trim();
            oppClose.Save();
			lblmsg.Text = "";
            System.Web.HttpContext.Current.Response.Redirect(string.Format("Opportunity.aspx?modeid=Detail&entityid=" + opp.Id.ToString()));         
        }
        else
        {
            //save according to warning
			
            if (lblmsg.Text != "")
            {
				if(oppClose == null)
				{
					oppClose = Sage.Platform.EntityFactory.Create<Sage.Entity.Interfaces.IOppClosedCustCode>();
				}
                oppClose.Vwareamaster = objarea;
                oppClose.CustomerCode = Convert.ToInt32(txtcustomerCode.Text.Trim());
                oppClose.Opportunity = opp;
				oppClose.CArea = objarea.Carea.Trim();
				oppClose.Save();
                //lblmsg.Visible = false;
                lblmsg.Text = "";
                System.Web.HttpContext.Current.Response.Redirect(string.Format("Opportunity.aspx?modeid=Detail&entityid=" + opp.Id.ToString()));
            }
            else
            {
                //DialogService.ShowMessage("Customer code is not relate to Account Manager, if you want continue then click again ok");
                lblmsg.Visible = true;
                lblmsg.Text = "Customer code is not relate to Account Manager, if you want continue then click again ok";
            }
           
        }
    }
}
else
{
    //DialogService.ShowMessage("Invalid Customer Code");
	lblmsg.Text="Invalid Customer Code";
}    

}
protected void btnCancel_ClickAction(object sender, EventArgs e) {
Sage.Entity.Interfaces.IOpportunity opportunity = GetParentEntity() as Sage.Entity.Interfaces.IOpportunity;
    //opportunity.Status = "Active";
    opportunity.Closed = false;
    if (!(opportunity.Closed ?? false))
    {
        object resOpen = System.Web.HttpContext.GetGlobalResourceObject("Opportunity", "Opp_Status_Active");
        if (resOpen != null)
        {
            opportunity.Status = resOpen.ToString(); //"Open";
        }
    }
    
//opp.Status = "Active";
  System.Web.HttpContext.Current.Response.Redirect(string.Format("Opportunity.aspx?modeid=Detail&entityid=" + opportunity.Id.ToString()));


}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 lueAreamaster.LookupResultValueChanged += new EventHandler(lueAreamaster_ChangeAction);
txtcustomerCode.TextChanged += new EventHandler(txtcustomerCode_ChangeAction);
btnOK.Click += new EventHandler(btnOK_ClickAction);
btnCancel.Click += new EventHandler(btnCancel_ClickAction);
btnCancel.Click += new EventHandler(DialogService.CloseEventHappened);


}

protected void quickformload0(object sender, EventArgs e) {
lueAreamaster_lbl.ForeColor = System.Drawing.Color.Red;
lblmsg.ForeColor = System.Drawing.Color.Red;
txtcustomerCode_lbl.ForeColor = System.Drawing.Color.Red;

}
private bool _runActivating;
protected override void OnActivating()
{
_runActivating = true;
}
private void DoActivating()
{
quickformload0(this, EventArgs.Empty);

}
protected override void OnFormBound()
{
Sage.Platform.WebPortal.EntityPage epage = Page as Sage.Platform.WebPortal.EntityPage;
        if (epage != null)
            _runActivating = (epage.IsNewEntity || _runActivating);
if (_runActivating) DoActivating();
ScriptManager.RegisterStartupScript(Page, GetType(), "cleanupcontainer", "jQuery(\".controlslist > div:empty\").remove();", true);
if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
ClientBindingMgr.RegisterDialogCancelButton(btnCancel);


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new CustomerCodeDetailsAdapter(this)); }
}

public class CustomerCodeDetailsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.ICustomerCodeDetails
{
    public CustomerCodeDetailsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ILookupControl _lueAreamaster;
    public  Sage.Platform.Controls.ILookupControl lueAreamaster
    {
        get { return FindControl(ref _lueAreamaster, "lueAreamaster"); }
    }
    private Sage.Platform.Controls.ILabelControl _lblmsg;
    public  Sage.Platform.Controls.ILabelControl lblmsg
    {
        get { return FindControl(ref _lblmsg, "lblmsg"); }
    }
    private Sage.Platform.Controls.IControlsListControl _QFControlsList;
    public  Sage.Platform.Controls.IControlsListControl QFControlsList
    {
        get { return FindControl(ref _QFControlsList, "QFControlsList"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnOK;
    public  Sage.Platform.Controls.IButtonControl btnOK
    {
        get { return FindControl(ref _btnOK, "btnOK"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnCancel;
    public  Sage.Platform.Controls.IButtonControl btnCancel
    {
        get { return FindControl(ref _btnCancel, "btnCancel"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtcustomerCode;
    public  Sage.Platform.Controls.ITextBoxControl txtcustomerCode
    {
        get { return FindControl(ref _txtcustomerCode, "txtcustomerCode"); }
    }

}

</script>

<script type="text/javascript">
</script>
