<%@ Control Language="C#" ClassName="InsertOAuthProvider" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="33%" />
            <col width="33%" />
     <tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtProviderKey_lbl" AssociatedControlID="txtProviderKey" runat="server" Text="<%$ resources: txtProviderKey.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtProviderKey" Required="true"  dojoType="Sage.UI.Controls.TextBox" MaxLength="10"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtProviderName_lbl" AssociatedControlID="txtProviderName" runat="server" Text="<%$ resources: txtProviderName.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtProviderName" Required="true"  dojoType="Sage.UI.Controls.TextBox" MaxLength="32"  />
  </div>

      </td>
      </tr>
<tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft" >
   <asp:Label ID="txtEndpointURL_lbl" AssociatedControlID="txtEndpointURL" runat="server" Text="<%$ resources: txtEndpointURL.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtEndpointURL"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
            </tr>
<tr>
            <td  colspan="2" >
  <hr />
 

      </td>
            </tr>
<tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft" >
   <asp:Label ID="txtClientSecret_lbl" AssociatedControlID="txtClientSecret" runat="server" Text="<%$ resources: txtClientSecret.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtClientSecret"  dojoType="Sage.UI.Controls.TextBox" MaxLength="128"  />
  </div>

      </td>
            </tr>
<tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft" >
   <asp:Label ID="txtClientId_lbl" AssociatedControlID="txtClientId" runat="server" Text="<%$ resources: txtClientId.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtClientId"  dojoType="Sage.UI.Controls.TextBox" MaxLength="128"  />
  </div>

      </td>
            </tr>
<tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft">
   <asp:Label ID="txtHost_lbl" AssociatedControlID="txtHost" runat="server" Text="<%$ resources: txtHost.Caption %>" ></asp:Label>
 </div>   
   <div  class="twocoltextcontrol"  > 
    <SalesLogix:URL runat="server" ID="txtHost" MaxLength="64" URLTextBoxStyle-ForeColor="#000099" URLTextBoxStyle-Font-Underline="false" />
  </div>

      </td>
            </tr>
<tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft" >
   <asp:Label ID="txtUserApprovalUrl_lbl" AssociatedControlID="txtUserApprovalUrl" runat="server" Text="<%$ resources: txtUserApprovalUrl.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtUserApprovalUrl"  dojoType="Sage.UI.Controls.TextBox" MaxLength="64"  />
  </div>

      </td>
            </tr>
<tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft" >
   <asp:Label ID="txtUserApprovalData_lbl" AssociatedControlID="txtUserApprovalData" runat="server" Text="<%$ resources: txtUserApprovalData.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtUserApprovalData"  dojoType="Sage.UI.Controls.TextBox" MaxLength="256"  />
  </div>

      </td>
            </tr>
<tr>
            <td  colspan="2" >
  <hr />
 

      </td>
            </tr>
<tr>
            <td  >
<div class="slxlabel  alignleft checkboxRight">

  <SalesLogix:SLXCheckBox runat="server" ID="chkRequiresRefresh"  Text="<%$ resources: chkRequiresRefresh.Caption %>"  CssClass=""
LabelPlacement="left"  />
</div>
      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtMethod_lbl" AssociatedControlID="txtMethod" runat="server" Text="<%$ resources: txtMethod.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtMethod"  dojoType="Sage.UI.Controls.TextBox" MaxLength="10"  />
  </div>

      </td>
      </tr>
<tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft" >
   <asp:Label ID="txtRefreshUrl_lbl" AssociatedControlID="txtRefreshUrl" runat="server" Text="<%$ resources: txtRefreshUrl.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtRefreshUrl"  dojoType="Sage.UI.Controls.TextBox" MaxLength="64"  />
  </div>

      </td>
            </tr>
<tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft" >
   <asp:Label ID="txtRefreshData_lbl" AssociatedControlID="txtRefreshData" runat="server" Text="<%$ resources: txtRefreshData.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtRefreshData"  dojoType="Sage.UI.Controls.TextBox" MaxLength="256"  />
  </div>

      </td>
            </tr>
<tr>
            <td  colspan="2" >
  <hr />
 

      </td>
            </tr>
<tr>
            <td  >
<div class="slxlabel  alignleft checkboxRight">

  <SalesLogix:SLXCheckBox runat="server" ID="chkRequiresAccessToken"  Text="<%$ resources: chkRequiresAccessToken.Caption %>"  CssClass=""
LabelPlacement="left"  />
</div>
      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtAccessMethod_lbl" AssociatedControlID="txtAccessMethod" runat="server" Text="<%$ resources: txtAccessMethod.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtAccessMethod"  dojoType="Sage.UI.Controls.TextBox" MaxLength="10"  />
  </div>

      </td>
      </tr>
<tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft" >
   <asp:Label ID="txtAccessUrl_lbl" AssociatedControlID="txtAccessUrl" runat="server" Text="<%$ resources: txtAccessUrl.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtAccessUrl"  dojoType="Sage.UI.Controls.TextBox" MaxLength="64"  />
  </div>

      </td>
            </tr>
<tr>
            <td  colspan="2" >
 <div class="twocollbl alignleft" >
   <asp:Label ID="txtAccessData_lbl" AssociatedControlID="txtAccessData" runat="server" Text="<%$ resources: txtAccessData.Caption %>" ></asp:Label>
 </div>
  <div  class="twocoltextcontrol"   >
<asp:TextBox runat="server" ID="txtAccessData"  dojoType="Sage.UI.Controls.TextBox" MaxLength="256"  />
  </div>

      </td>
            </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="InsertOAuthProvider_RTools" ToolbarLocation="right">
    <asp:ImageButton runat="server" ID="QFButton"
 ToolTip="<%$ resources: QFButton.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=InsertOAuthProvider&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkInsertOAuthProviderHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="InsertOAuthProvider" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IOAuthProvider); }
}

 

protected override void OnAddEntityBindings() {
                 // txtProviderKey.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtProviderKeyTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ProviderKey", txtProviderKey, "Text");
        BindingSource.Bindings.Add(txtProviderKeyTextBinding);
                    // txtProviderName.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtProviderNameTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ProviderName", txtProviderName, "Text");
        BindingSource.Bindings.Add(txtProviderNameTextBinding);
                    // txtEndpointURL.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtEndpointURLTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("EndPointURL", txtEndpointURL, "Text");
        BindingSource.Bindings.Add(txtEndpointURLTextBinding);
                       // txtClientSecret.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtClientSecretTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Secret", txtClientSecret, "Text");
        BindingSource.Bindings.Add(txtClientSecretTextBinding);
                    // txtClientId.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtClientIdTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("ClientId", txtClientId, "Text");
        BindingSource.Bindings.Add(txtClientIdTextBinding);
                    // txtHost.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtHostTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Host", txtHost, "Text");
        BindingSource.Bindings.Add(txtHostTextBinding);
                    // txtUserApprovalUrl.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtUserApprovalUrlTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("UserApprovalUrl", txtUserApprovalUrl, "Text");
        BindingSource.Bindings.Add(txtUserApprovalUrlTextBinding);
                    // txtUserApprovalData.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtUserApprovalDataTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("UserApprovalData", txtUserApprovalData, "Text");
        BindingSource.Bindings.Add(txtUserApprovalDataTextBinding);
                       // chkRequiresRefresh.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkRequiresRefreshCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("RequiresRefreshToken", chkRequiresRefresh, "Checked");
        BindingSource.Bindings.Add(chkRequiresRefreshCheckedBinding);
                    // txtMethod.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtMethodTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("RefreshTokenMethod", txtMethod, "Text");
        BindingSource.Bindings.Add(txtMethodTextBinding);
                    // txtRefreshUrl.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtRefreshUrlTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("RefreshTokenUrl", txtRefreshUrl, "Text");
        BindingSource.Bindings.Add(txtRefreshUrlTextBinding);
                    // txtRefreshData.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtRefreshDataTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("RefreshTokenData", txtRefreshData, "Text");
        BindingSource.Bindings.Add(txtRefreshDataTextBinding);
                       // chkRequiresAccessToken.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkRequiresAccessTokenCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("RequiresAccessToken", chkRequiresAccessToken, "Checked");
        BindingSource.Bindings.Add(chkRequiresAccessTokenCheckedBinding);
                    // txtAccessMethod.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtAccessMethodTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AccessTokenMethod", txtAccessMethod, "Text");
        BindingSource.Bindings.Add(txtAccessMethodTextBinding);
                    // txtAccessUrl.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtAccessUrlTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AccessTokenUrl", txtAccessUrl, "Text");
        BindingSource.Bindings.Add(txtAccessUrlTextBinding);
                    // txtAccessData.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtAccessDataTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AccessTokenData", txtAccessData, "Text");
        BindingSource.Bindings.Add(txtAccessDataTextBinding);
    
   
         
      
      
      
    }
                                                                                                                                     
protected void QFButton_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IOAuthProvider _entity = BindingSource.Current as Sage.Entity.Interfaces.IOAuthProvider;
  if (_entity != null)
  {
    object _parent = GetParentEntity();
    if (DialogService.ChildInsertInfo != null)
    {
        if (_parent != null)
        {
            if (DialogService.ChildInsertInfo.ParentReferenceProperty != null)
            {
                DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
            }
        }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
    if (page != null)
    {
        if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
        {
            shouldSave = false;
        }
    }

    if(shouldSave)
    {
       _entity.Save();
    }

    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null)
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }
  }

          QFButton_ClickActionBRC(sender, e);
    
  
}
protected void QFButton_ClickActionBRC(object sender, EventArgs e) {
      Response.Redirect(string.Format("OAuthProvider.aspx?entityId={0}", (this.BindingSource.Current as Sage.Platform.ComponentModel.IComponentReference).Id));
  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 if (RoleSecurityService != null)
{
if (RoleSecurityService.HasAccess("ENTITIES/AUTHENTICATIONPROVIDER/ADD"))
{
QFButton.Click += new ImageClickEventHandler(QFButton_ClickAction);
}
}


}

protected override void OnFormBound()
{
ClientBindingMgr.RegisterSaveButton(QFButton);

if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
if (!RoleSecurityService.HasAccess("ENTITIES/AUTHENTICATIONPROVIDER/ADD"))
{
QFButton.Visible = false;
}


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new InsertOAuthProviderAdapter(this)); }
}

public class InsertOAuthProviderAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IInsertOAuthProvider
{
    public InsertOAuthProviderAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ITextBoxControl _txtProviderKey;
    public  Sage.Platform.Controls.ITextBoxControl txtProviderKey
    {
        get { return FindControl(ref _txtProviderKey, "txtProviderKey"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtEndpointURL;
    public  Sage.Platform.Controls.ITextBoxControl txtEndpointURL
    {
        get { return FindControl(ref _txtEndpointURL, "txtEndpointURL"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtClientSecret;
    public  Sage.Platform.Controls.ITextBoxControl txtClientSecret
    {
        get { return FindControl(ref _txtClientSecret, "txtClientSecret"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtClientId;
    public  Sage.Platform.Controls.ITextBoxControl txtClientId
    {
        get { return FindControl(ref _txtClientId, "txtClientId"); }
    }
    private Sage.Platform.Controls.IUrlControl _txtHost;
    public  Sage.Platform.Controls.IUrlControl txtHost
    {
        get { return FindControl(ref _txtHost, "txtHost"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtUserApprovalUrl;
    public  Sage.Platform.Controls.ITextBoxControl txtUserApprovalUrl
    {
        get { return FindControl(ref _txtUserApprovalUrl, "txtUserApprovalUrl"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtUserApprovalData;
    public  Sage.Platform.Controls.ITextBoxControl txtUserApprovalData
    {
        get { return FindControl(ref _txtUserApprovalData, "txtUserApprovalData"); }
    }
    private Sage.Platform.Controls.ICheckBoxControl _chkRequiresRefresh;
    public  Sage.Platform.Controls.ICheckBoxControl chkRequiresRefresh
    {
        get { return FindControl(ref _chkRequiresRefresh, "chkRequiresRefresh"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtRefreshUrl;
    public  Sage.Platform.Controls.ITextBoxControl txtRefreshUrl
    {
        get { return FindControl(ref _txtRefreshUrl, "txtRefreshUrl"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtRefreshData;
    public  Sage.Platform.Controls.ITextBoxControl txtRefreshData
    {
        get { return FindControl(ref _txtRefreshData, "txtRefreshData"); }
    }
    private Sage.Platform.Controls.ICheckBoxControl _chkRequiresAccessToken;
    public  Sage.Platform.Controls.ICheckBoxControl chkRequiresAccessToken
    {
        get { return FindControl(ref _chkRequiresAccessToken, "chkRequiresAccessToken"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtAccessUrl;
    public  Sage.Platform.Controls.ITextBoxControl txtAccessUrl
    {
        get { return FindControl(ref _txtAccessUrl, "txtAccessUrl"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtAccessData;
    public  Sage.Platform.Controls.ITextBoxControl txtAccessData
    {
        get { return FindControl(ref _txtAccessData, "txtAccessData"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtProviderName;
    public  Sage.Platform.Controls.ITextBoxControl txtProviderName
    {
        get { return FindControl(ref _txtProviderName, "txtProviderName"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtMethod;
    public  Sage.Platform.Controls.ITextBoxControl txtMethod
    {
        get { return FindControl(ref _txtMethod, "txtMethod"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtAccessMethod;
    public  Sage.Platform.Controls.ITextBoxControl txtAccessMethod
    {
        get { return FindControl(ref _txtAccessMethod, "txtAccessMethod"); }
    }
    private Sage.Platform.Controls.IButtonControl _QFButton;
    public  Sage.Platform.Controls.IButtonControl QFButton
    {
        get { return FindControl(ref _QFButton, "QFButton"); }
    }

}

</script>

<script type="text/javascript">
</script>
