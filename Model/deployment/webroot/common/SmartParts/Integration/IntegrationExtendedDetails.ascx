<%@ Control Language="C#" ClassName="IntegrationExtendedDetails" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="100%" />
     <tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtApprovalUrl_lbl" AssociatedControlID="txtApprovalUrl" runat="server" Text="<%$ resources: txtApprovalUrl.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtApprovalUrl" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtUserDataString_lbl" AssociatedControlID="txtUserDataString" runat="server" Text="<%$ resources: txtUserDataString.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtUserDataString" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
  <hr />
 

      </td>
      </tr>
<tr>
            <td  >
<div class="slxlabel  alignleft checkboxRight">

  <SalesLogix:SLXCheckBox runat="server" ID="chkRequiresRefreshToken"  Text="<%$ resources: chkRequiresRefreshToken.Caption %>"  CssClass=""
Enabled="false" LabelPlacement="left"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtMethod_lbl" AssociatedControlID="txtMethod" runat="server" Text="<%$ resources: txtMethod.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtMethod" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtRefreshUrl_lbl" AssociatedControlID="txtRefreshUrl" runat="server" Text="<%$ resources: txtRefreshUrl.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtRefreshUrl" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtRefreshData_lbl" AssociatedControlID="txtRefreshData" runat="server" Text="<%$ resources: txtRefreshData.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtRefreshData" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
  <hr />
 

      </td>
      </tr>
<tr>
            <td  >
<div class="slxlabel  alignleft checkboxRight">

  <SalesLogix:SLXCheckBox runat="server" ID="chkRequiresAccess"  Text="<%$ resources: chkRequiresAccess.Caption %>"  CssClass=""
Enabled="false" LabelPlacement="left"  />
</div>
      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtAccessMethod_lbl" AssociatedControlID="txtAccessMethod" runat="server" Text="<%$ resources: txtAccessMethod.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtAccessMethod" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtAccessUrl_lbl" AssociatedControlID="txtAccessUrl" runat="server" Text="<%$ resources: txtAccessUrl.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtAccessUrl" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtAccessData_lbl" AssociatedControlID="txtAccessData" runat="server" Text="<%$ resources: txtAccessData.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtAccessData" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="IntegrationExtendedDetails_RTools" ToolbarLocation="right">
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=IntegrationExtendedDetails&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkIntegrationExtendedDetailsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="IntegrationExtendedDetails" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IIntegration); }
}

 

protected override void OnAddEntityBindings() {
                 // txtApprovalUrl.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtApprovalUrlTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OAuthProvider.UserApprovalData", txtApprovalUrl, "Text");
        BindingSource.Bindings.Add(txtApprovalUrlTextBinding);
                    // txtUserDataString.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtUserDataStringTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OAuthProvider.UserApprovalData", txtUserDataString, "Text");
        BindingSource.Bindings.Add(txtUserDataStringTextBinding);
                       // chkRequiresRefreshToken.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkRequiresRefreshTokenCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OAuthProvider.RequiresRefreshToken", chkRequiresRefreshToken, "Checked");
        BindingSource.Bindings.Add(chkRequiresRefreshTokenCheckedBinding);
                    // txtMethod.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtMethodTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OAuthProvider.RefreshTokenMethod", txtMethod, "Text");
        BindingSource.Bindings.Add(txtMethodTextBinding);
                    // txtRefreshUrl.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtRefreshUrlTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OAuthProvider.RefreshTokenUrl", txtRefreshUrl, "Text");
        BindingSource.Bindings.Add(txtRefreshUrlTextBinding);
                    // txtRefreshData.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtRefreshDataTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OAuthProvider.RefreshTokenData", txtRefreshData, "Text");
        BindingSource.Bindings.Add(txtRefreshDataTextBinding);
                       // chkRequiresAccess.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkRequiresAccessCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OAuthProvider.RequiresAccessToken", chkRequiresAccess, "Checked");
        BindingSource.Bindings.Add(chkRequiresAccessCheckedBinding);
                    // txtAccessMethod.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtAccessMethodTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OAuthProvider.RefreshTokenMethod", txtAccessMethod, "Text");
        BindingSource.Bindings.Add(txtAccessMethodTextBinding);
                    // txtAccessUrl.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtAccessUrlTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OAuthProvider.RefreshTokenUrl", txtAccessUrl, "Text");
        BindingSource.Bindings.Add(txtAccessUrlTextBinding);
                    // txtAccessData.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtAccessDataTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OAuthProvider.RefreshTokenData", txtAccessData, "Text");
        BindingSource.Bindings.Add(txtAccessDataTextBinding);
    
   
}
                                                                                    

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 
}

protected override void OnFormBound()
{
if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new IntegrationExtendedDetailsAdapter(this)); }
}

public class IntegrationExtendedDetailsAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IIntegrationExtendedDetails
{
    public IntegrationExtendedDetailsAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ITextBoxControl _txtApprovalUrl;
    public  Sage.Platform.Controls.ITextBoxControl txtApprovalUrl
    {
        get { return FindControl(ref _txtApprovalUrl, "txtApprovalUrl"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtUserDataString;
    public  Sage.Platform.Controls.ITextBoxControl txtUserDataString
    {
        get { return FindControl(ref _txtUserDataString, "txtUserDataString"); }
    }
    private Sage.Platform.Controls.ICheckBoxControl _chkRequiresRefreshToken;
    public  Sage.Platform.Controls.ICheckBoxControl chkRequiresRefreshToken
    {
        get { return FindControl(ref _chkRequiresRefreshToken, "chkRequiresRefreshToken"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtMethod;
    public  Sage.Platform.Controls.ITextBoxControl txtMethod
    {
        get { return FindControl(ref _txtMethod, "txtMethod"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtRefreshUrl;
    public  Sage.Platform.Controls.ITextBoxControl txtRefreshUrl
    {
        get { return FindControl(ref _txtRefreshUrl, "txtRefreshUrl"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtRefreshData;
    public  Sage.Platform.Controls.ITextBoxControl txtRefreshData
    {
        get { return FindControl(ref _txtRefreshData, "txtRefreshData"); }
    }
    private Sage.Platform.Controls.ICheckBoxControl _chkRequiresAccess;
    public  Sage.Platform.Controls.ICheckBoxControl chkRequiresAccess
    {
        get { return FindControl(ref _chkRequiresAccess, "chkRequiresAccess"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtAccessMethod;
    public  Sage.Platform.Controls.ITextBoxControl txtAccessMethod
    {
        get { return FindControl(ref _txtAccessMethod, "txtAccessMethod"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtAccessUrl;
    public  Sage.Platform.Controls.ITextBoxControl txtAccessUrl
    {
        get { return FindControl(ref _txtAccessUrl, "txtAccessUrl"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtAccessData;
    public  Sage.Platform.Controls.ITextBoxControl txtAccessData
    {
        get { return FindControl(ref _txtAccessData, "txtAccessData"); }
    }

}

</script>

<script type="text/javascript">
</script>
