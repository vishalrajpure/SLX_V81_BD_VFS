<%@ Control Language="C#" ClassName="IntegrationDetail" Inherits="Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.DependencyLookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.HighLevelTypes" Namespace="Sage.SalesLogix.HighLevelTypes" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="SalesLogix" %>

<%//------------------------------------------------------------------------
//This file was generated by a tool.  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//------------------------------------------------------------------------ %>
<table border="0" cellpadding="1" cellspacing="0" class="formtable">
         <col width="45%" />
            <col width="33%" />
            <col width="22%" />
     <tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtIntegration_lbl" AssociatedControlID="txtIntegration" runat="server" Text="<%$ resources: txtIntegration.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtIntegration" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklAuthType_lbl" AssociatedControlID="pklAuthType" runat="server" Text="<%$ resources: pklAuthType.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklAuthType" ReadOnly="true" PickListName="Integration Auth Type" Required="true" MaxLength="64" StorageMode="Code"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklSyncMethod_lbl" AssociatedControlID="pklSyncMethod" runat="server" Text="<%$ resources: pklSyncMethod.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklSyncMethod" ReadOnly="true" PickListName="Integration Sync Method" Required="true" MaxLength="64" StorageMode="Code"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="pklLinkType_lbl" AssociatedControlID="pklLinkType" runat="server" Text="<%$ resources: pklLinkType.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol picklist"  > 
    <SalesLogix:PickListControl runat="server" ID="pklLinkType" PickListName="Integration Link Type" Required="true" MaxLength="64" StorageMode="Code"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtClientId_lbl" AssociatedControlID="txtClientId" runat="server" Text="<%$ resources: txtClientId.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtClientId"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtSecret_lbl" AssociatedControlID="txtSecret" runat="server" Text="<%$ resources: txtSecret.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtSecret"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="lnkClientIdHelp_lbl" AssociatedControlID="lnkClientIdHelp" runat="server" Text="<%$ resources: lnkClientIdHelp.Caption %>" ></asp:Label>
 </div>
  <asp:HyperLink runat="server" ID="lnkClientIdHelp"   Text="<%$ resources: lnkClientIdHelp.Text %>"     NavigateUrl="http://www.saleslogix.com/inproduct/help"     Target="_blank" />

      </td>
                <td></td>
                <td></td>
      </tr>
<tr>
            <td  >
<div class="slxlabel  alignleft checkboxRight">

  <SalesLogix:SLXCheckBox runat="server" ID="chkEnabled"  Text="<%$ resources: chkEnabled.Caption %>"  CssClass=""
LabelPlacement="left"  />
</div>
      </td>
                <td></td>
                <td></td>
      </tr>
<tr>
            <td  >
 <div class=" lbl alignleft" >
   <asp:Label ID="txtSyncHandler_lbl" AssociatedControlID="txtSyncHandler" runat="server" Text="<%$ resources: txtSyncHandler.Caption %>" ></asp:Label>
 </div>
  <div  class="textcontrol"   >
<asp:TextBox runat="server" ID="txtSyncHandler" Enabled="false" ReadOnly="true"  dojoType="Sage.UI.Controls.TextBox"  />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="numSyncInterval_lbl" AssociatedControlID="numSyncInterval" runat="server" Text="<%$ resources: numSyncInterval.Caption %>" ></asp:Label>
 </div>   
   <div  class="textcontrol numeric"  > 
    <SalesLogix:NumericControl runat="server" ID="numSyncInterval"
Strict="False" 
 />
  </div>

      </td>
                <td  >
 <div class="slxlabel"><asp:Label runat="server" ID="lblMinutes" Text="<%$ resources: lblMinutes.Text %>"  />
</div>
      </td>
      </tr>
<tr>
            <td></td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dteStartTime_lbl" AssociatedControlID="dteStartTime" runat="server" Text="<%$ resources: dteStartTime.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dteStartTime" DisplayDate="false" />
  </div>

      </td>
                <td  >
 <div class=" lbl alignleft">
   <asp:Label ID="dteEndTime_lbl" AssociatedControlID="dteEndTime" runat="server" Text="<%$ resources: dteEndTime.Caption %>" ></asp:Label>
 </div>
   <div  class="textcontrol datepicker"  >
    <SalesLogix:DateTimePicker runat="server" ID="dteEndTime" DisplayDate="false" />
  </div>

      </td>
      </tr>
</table>
 


 <SalesLogix:SmartPartToolsContainer runat="server" ID="IntegrationDetail_RTools" ToolbarLocation="right">
   <SalesLogix:GroupNavigator runat="server" ID="grpNavIntegration" ></SalesLogix:GroupNavigator>
    <asp:ImageButton runat="server" ID="btnSave"
 AlternateText="<%$ resources: btnSave.Caption %>"  ToolTip="<%$ resources: btnSave.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Save_16x16"  />
   
    <asp:ImageButton runat="server" ID="btnReset"
 AlternateText="<%$ resources: btnReset.Caption %>"  ToolTip="<%$ resources: btnReset.ToolTip %>" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Reset_16x16"  />
 
  <SalesLogix:PageLink ID="btnEditForm" CssClass="adminEditFormButton" runat="server" LinkType="RelativePath" ToolTip="<%$ resources: Portal, EditForm_ToolTip %>" NavigateUrl="~/FormManager.aspx?entityid=IntegrationDetail&modeid=Detail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=form_manager_16x16"></SalesLogix:PageLink>
 
 
 
 
 <SalesLogix:PageLink ID="lnkIntegrationDetailHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="IntegrationDetail" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
 </SalesLogix:SmartPartToolsContainer>



<script runat="server" type="text/C#">
/// <summary>
/// Gets or sets the role security service.
/// </summary>
/// <value>The role security service.</value>
[Sage.Platform.Application.ServiceDependency]
public Sage.Platform.Security.IRoleSecurityService RoleSecurityService { get; set; }

public override Type EntityType
{
    get { return typeof(Sage.Entity.Interfaces.IIntegration); }
}

 

protected override void OnAddEntityBindings() {
                 // txtIntegration.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtIntegrationTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Name", txtIntegration, "Text");
        BindingSource.Bindings.Add(txtIntegrationTextBinding);
                    // pklAuthType.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklAuthTypePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("AuthorizationType", pklAuthType, "PickListValue");
        BindingSource.Bindings.Add(pklAuthTypePickListValueBinding);
                    // pklSyncMethod.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklSyncMethodPickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SyncMethod", pklSyncMethod, "PickListValue");
        BindingSource.Bindings.Add(pklSyncMethodPickListValueBinding);
                    // pklLinkType.PickListValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding pklLinkTypePickListValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("LinkType", pklLinkType, "PickListValue");
        BindingSource.Bindings.Add(pklLinkTypePickListValueBinding);
                    // txtClientId.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtClientIdTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OAuthProvider.ClientId", txtClientId, "Text");
        BindingSource.Bindings.Add(txtClientIdTextBinding);
                    // txtSecret.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtSecretTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("OAuthProvider.Secret", txtSecret, "Text");
        BindingSource.Bindings.Add(txtSecretTextBinding);
                       // chkEnabled.Checked Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding chkEnabledCheckedBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("Enabled", chkEnabled, "Checked");
        BindingSource.Bindings.Add(chkEnabledCheckedBinding);
                    // txtSyncHandler.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding txtSyncHandlerTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SyncHandler", txtSyncHandler, "Text");
        BindingSource.Bindings.Add(txtSyncHandlerTextBinding);
                    // numSyncInterval.Text Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding numSyncIntervalTextBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SyncInterval", numSyncInterval, "Text");
        BindingSource.Bindings.Add(numSyncIntervalTextBinding);
                       // dteStartTime.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dteStartTimeDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SyncStartTime", dteStartTime, "DateTimeValue");
        BindingSource.Bindings.Add(dteStartTimeDateTimeValueBinding);
                    // dteEndTime.DateTimeValue Binding
        Sage.Platform.WebPortal.Binding.WebEntityBinding dteEndTimeDateTimeValueBinding = new Sage.Platform.WebPortal.Binding.WebEntityBinding("SyncEndTime", dteEndTime, "DateTimeValue");
        BindingSource.Bindings.Add(dteEndTimeDateTimeValueBinding);
    
   
             
      
      
      
        }
                                                                                           
protected void btnSave_ClickAction(object sender, EventArgs e) {
  Sage.Entity.Interfaces.IIntegration _entity = BindingSource.Current as Sage.Entity.Interfaces.IIntegration;
  if (_entity != null)
  {
    object _parent = GetParentEntity();
    if (DialogService.ChildInsertInfo != null)
    {
        if (_parent != null)
        {
            if (DialogService.ChildInsertInfo.ParentReferenceProperty != null)
            {
                DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
            }
        }
    }
    bool shouldSave = true;
    Sage.Platform.WebPortal.EntityPage page = Page as Sage.Platform.WebPortal.EntityPage;
    if (page != null)
    {
        if(IsInDialog() && page.ModeId.ToUpper() == "INSERT")
        {
            shouldSave = false;
        }
    }

    if(shouldSave)
    {
       _entity.Save();
    }

    if (_parent != null)
    {
        if (DialogService.ChildInsertInfo != null)
        {
           if (DialogService.ChildInsertInfo.ParentsCollectionProperty != null)
           {
              System.Reflection.MethodInfo _add = DialogService.ChildInsertInfo.ParentsCollectionProperty.PropertyType.GetMethod("Add");
              _add.Invoke(DialogService.ChildInsertInfo.ParentsCollectionProperty.GetValue(_parent, null), new object[] { _entity });
           }
        }
     }
  }

  
}
protected void btnReset_ClickAction(object sender, EventArgs e) {
  
}

protected override void OnWireEventHandlers()
{
 base.OnWireEventHandlers();
 if (RoleSecurityService != null)
{
if (RoleSecurityService.HasAccess("ENTITIES/INTEGRATION/SAVE"))
{
btnSave.Click += new ImageClickEventHandler(btnSave_ClickAction);
}
}
btnReset.Click += new ImageClickEventHandler(btnReset_ClickAction);


}

protected void quickformload0(object sender, EventArgs e) {
Sage.Entity.Interfaces.IIntegration integration = BindingSource.Current as Sage.Entity.Interfaces.IIntegration;
if (integration != null)
{
    bool isOAuthType = integration.AuthorizationType != null && (integration.AuthorizationType == "OAuth1" ||
                                                                 integration.AuthorizationType == "OAuth2" ||
                                                                 integration.AuthorizationType.Contains("OAuth"));
    if (isOAuthType)
    {
        txtClientId.Visible = true;
        txtSecret.Visible = true;
        txtSecret_lbl.Visible = true;
        lnkClientIdHelp.Visible = true;
        txtClientId_lbl.Visible = true;
        lnkClientIdHelp_lbl.Visible = true;
    }
    else
    {
        txtClientId.Visible = false;
        txtSecret.Visible = false;
        txtSecret_lbl.Visible = false;
        lnkClientIdHelp.Visible = false;
        txtClientId_lbl.Visible = false;
        lnkClientIdHelp_lbl.Visible = false;
    }
	bool isNoSyncType = (integration.SyncMethod != "NoSync");
	numSyncInterval.Enabled = isNoSyncType;
	dteStartTime.Enabled = isNoSyncType;
	dteEndTime.Enabled = isNoSyncType;
}

}
private bool _runActivating;
protected override void OnActivating()
{
_runActivating = true;
}
private void DoActivating()
{
quickformload0(this, EventArgs.Empty);

}
protected override void OnFormBound()
{
Sage.Platform.WebPortal.EntityPage epage = Page as Sage.Platform.WebPortal.EntityPage;
        if (epage != null)
            _runActivating = (epage.IsNewEntity || _runActivating);
if (_runActivating) DoActivating();
ClientBindingMgr.RegisterSaveButton(btnSave);

if (!RoleSecurityService.HasAccess("Administration/Forms/View"))
{
btnEditForm.Visible = false;
}
if (!RoleSecurityService.HasAccess("ENTITIES/INTEGRATION/SAVE"))
{
btnSave.Visible = false;
}
if (ClientBindingMgr != null) { ClientBindingMgr.RegisterResetButton(btnReset); }


}



public override Sage.Platform.Application.UI.ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
{
    ToolsSmartPartInfo tinfo = new ToolsSmartPartInfo();
        if (BindingSource != null)
    {
        if (BindingSource.Current != null)
        {
            tinfo.Description = BindingSource.Current.ToString();
            tinfo.Title = BindingSource.Current.ToString();
        }
    }
    
    foreach (Control c in Controls)
    {
        SmartPartToolsContainer cont = c as SmartPartToolsContainer;
        if (cont != null)
        {
            switch (cont.ToolbarLocation)
            {
                case SmartPartToolsLocation.Right:
                    foreach (Control tool in cont.Controls)
                    {
                                            tinfo.RightTools.Add(tool);
                                        }
                    break;
                case SmartPartToolsLocation.Center:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.CenterTools.Add(tool);
                    }
                    break;
                case SmartPartToolsLocation.Left:
                    foreach (Control tool in cont.Controls)
                    {
                        tinfo.LeftTools.Add(tool);
                    }
                    break;
            }
        }
    }

        return tinfo;
}

private Sage.Platform.Controls.IEntityForm _formAdapter;

public Sage.Platform.Controls.IEntityForm FormAdapter
{
    get { return _formAdapter ?? (_formAdapter = new IntegrationDetailAdapter(this)); }
}

public class IntegrationDetailAdapter : Sage.Platform.WebPortal.Adapters.EntityFormAdapter, Sage.Form.Interfaces.IIntegrationDetail
{
    public IntegrationDetailAdapter(Sage.Platform.WebPortal.SmartParts.EntityBoundSmartPartInfoProvider smartPart)
        : base(smartPart) {}

    private Sage.Platform.Controls.ITextBoxControl _txtIntegration;
    public  Sage.Platform.Controls.ITextBoxControl txtIntegration
    {
        get { return FindControl(ref _txtIntegration, "txtIntegration"); }
    }
    private Sage.Platform.Controls.IPickListControl _pklSyncMethod;
    public  Sage.Platform.Controls.IPickListControl pklSyncMethod
    {
        get { return FindControl(ref _pklSyncMethod, "pklSyncMethod"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtClientId;
    public  Sage.Platform.Controls.ITextBoxControl txtClientId
    {
        get { return FindControl(ref _txtClientId, "txtClientId"); }
    }
    private Sage.Platform.Controls.ILinkControl _lnkClientIdHelp;
    public  Sage.Platform.Controls.ILinkControl lnkClientIdHelp
    {
        get { return FindControl(ref _lnkClientIdHelp, "lnkClientIdHelp"); }
    }
    private Sage.Platform.Controls.ICheckBoxControl _chkEnabled;
    public  Sage.Platform.Controls.ICheckBoxControl chkEnabled
    {
        get { return FindControl(ref _chkEnabled, "chkEnabled"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtSyncHandler;
    public  Sage.Platform.Controls.ITextBoxControl txtSyncHandler
    {
        get { return FindControl(ref _txtSyncHandler, "txtSyncHandler"); }
    }
    private Sage.Platform.Controls.IPickListControl _pklAuthType;
    public  Sage.Platform.Controls.IPickListControl pklAuthType
    {
        get { return FindControl(ref _pklAuthType, "pklAuthType"); }
    }
    private Sage.Platform.Controls.IPickListControl _pklLinkType;
    public  Sage.Platform.Controls.IPickListControl pklLinkType
    {
        get { return FindControl(ref _pklLinkType, "pklLinkType"); }
    }
    private Sage.Platform.Controls.ITextBoxControl _txtSecret;
    public  Sage.Platform.Controls.ITextBoxControl txtSecret
    {
        get { return FindControl(ref _txtSecret, "txtSecret"); }
    }
    private Sage.Platform.Controls.INumericControl _numSyncInterval;
    public  Sage.Platform.Controls.INumericControl numSyncInterval
    {
        get { return FindControl(ref _numSyncInterval, "numSyncInterval"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dteStartTime;
    public  Sage.Platform.Controls.IDateTimePickerControl dteStartTime
    {
        get { return FindControl(ref _dteStartTime, "dteStartTime"); }
    }
    private Sage.Platform.Controls.ILabelControl _lblMinutes;
    public  Sage.Platform.Controls.ILabelControl lblMinutes
    {
        get { return FindControl(ref _lblMinutes, "lblMinutes"); }
    }
    private Sage.Platform.Controls.IDateTimePickerControl _dteEndTime;
    public  Sage.Platform.Controls.IDateTimePickerControl dteEndTime
    {
        get { return FindControl(ref _dteEndTime, "dteEndTime"); }
    }
    private Sage.Platform.Controls.IGroupNavigatorControl _grpNavIntegration;
    public  Sage.Platform.Controls.IGroupNavigatorControl grpNavIntegration
    {
        get { return FindControl(ref _grpNavIntegration, "grpNavIntegration"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnSave;
    public  Sage.Platform.Controls.IButtonControl btnSave
    {
        get { return FindControl(ref _btnSave, "btnSave"); }
    }
    private Sage.Platform.Controls.IButtonControl _btnReset;
    public  Sage.Platform.Controls.IButtonControl btnReset
    {
        get { return FindControl(ref _btnReset, "btnReset"); }
    }

}

</script>

<script type="text/javascript">
</script>
